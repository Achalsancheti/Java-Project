/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.NurseRole;

import Business.Enterprise.Enterprise;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.MainUserAccount.MainUserAccount;
import Business.WorkQueue.NurseTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Achal Sancheti
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private NurseOrganization nurseOrganization;
    private Enterprise enterprise;
    private MainUserAccount userAccount;

    /**
     * Creates new form NurseWorkAreaJPanel
     */
    public NurseWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise, MainUserAccount account,Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.nurseOrganization = (NurseOrganization) organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workrequestTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : nurseOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = request;
            row[1] = request.getID();
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            row[5] = request.getDate();
            row[6] = request.getTime();
            model.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workrequestTable = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        processButton = new javax.swing.JButton();
        assignButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workrequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Donor Name", "ID", "Sender", "Receiver", "Status", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workrequestTable);
        if (workrequestTable.getColumnModel().getColumnCount() > 0) {
            workrequestTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            workrequestTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            workrequestTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            workrequestTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            workrequestTable.getColumnModel().getColumn(4).setPreferredWidth(100);
            workrequestTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            workrequestTable.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 830, 150));

        refreshButton.setBackground(new java.awt.Color(0, 0, 0));
        refreshButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 100, 27));

        processButton.setBackground(new java.awt.Color(0, 0, 0));
        processButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        processButton.setForeground(new java.awt.Color(255, 255, 255));
        processButton.setText("Process");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });
        add(processButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 390, 150, 33));

        assignButton.setBackground(new java.awt.Color(0, 0, 0));
        assignButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        assignButton.setForeground(new java.awt.Color(255, 255, 255));
        assignButton.setText("Assign to me");
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });
        add(assignButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 150, 33));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Nurse Work Area");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 440, -1));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 90, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nurse.jpg"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(995, 110, 520, 420));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed

        int selectedRow = workrequestTable.getSelectedRow();

        if (selectedRow >= 0) {
            NurseTestWorkRequest request = (NurseTestWorkRequest) workrequestTable.getValueAt(selectedRow, 0);

            request.setStatus("Processing");

            ProcessWorkRequestJPanel processWorkRequestJPanel = new ProcessWorkRequestJPanel(userProcessContainer, request);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);

        } else {
            JOptionPane.showMessageDialog(null, "Please Select A Request Message To Process.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_processButtonActionPerformed

    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed

        int selectedRow = workrequestTable.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) workrequestTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request already processed.","Error",JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                request.setReceiver(userAccount);
                request.setStatus("Pending");
                populateTable();

            }

        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_assignButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTable workrequestTable;
    // End of variables declaration//GEN-END:variables
}
