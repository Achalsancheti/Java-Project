/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientRole;

import Business.Enterprise.Enterprise;
import Business.MainUserAccount.MainUserAccount;
import Business.Organization.PatientOrganization;
import Business.WorkQueue.VitalSignWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Achal Sancheti
 */
public class ManagePatientJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    MainUserAccount account;
    Enterprise enterprise;
    PatientOrganization patientOrganization;

    /**
     * Creates new form ManagePatientJPanel
     */
    public ManagePatientJPanel(JPanel userProcessContainer,Enterprise enterprise,MainUserAccount account,PatientOrganization patientOrganization) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.patientOrganization=patientOrganization;
        this.enterprise=enterprise;        
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        
        model.setRowCount(0);
        //for(WorkRequest request:account.getWorkQueue().getWorkRequestList()){
        for (WorkRequest req: patientOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[7];

            int respiratory = ((VitalSignWorkRequest)req).getRespiratoryRate();
            row[0] = respiratory;
            int heart = ((VitalSignWorkRequest)req).getHeartRate();
            row[1] = heart;
            int blood = ((VitalSignWorkRequest)req).getBloodPressure();
            row[2] = blood;
            float weight = ((VitalSignWorkRequest)req).getWeight();
            row[3] = weight;
            String condition = ((VitalSignWorkRequest)req).getCondition();
            row[4] = condition;
            row[5] = req.getDate();
            row[6] = req.getTime();
            
            model.addRow(row);
        //}
    }
    }
    
    private void createChart()
    {
        DefaultCategoryDataset vitalSignDataset=new DefaultCategoryDataset();
        int selectedRow = Table.getSelectedRow();

        for (WorkRequest vitalSign : patientOrganization.getWorkQueue().getWorkRequestList()) {
            if(vitalSign instanceof VitalSignWorkRequest){
            vitalSignDataset.setValue(((VitalSignWorkRequest)vitalSign).getRespiratoryRate(),"RR", vitalSign.getDate());
            vitalSignDataset.setValue(((VitalSignWorkRequest)vitalSign).getHeartRate(),"HR", vitalSign.getDate());
            vitalSignDataset.setValue(((VitalSignWorkRequest)vitalSign).getBloodPressure(),"BP", vitalSign.getDate());
            vitalSignDataset.setValue(((VitalSignWorkRequest)vitalSign).getWeight(),"WT", vitalSign.getDate());
            //}
            JFreeChart vitalSignChart= ChartFactory.createBarChart3D("Vital Sign Chart", "Time Stamp", "Rate", vitalSignDataset, PlotOrientation.VERTICAL, true, false, false);
        vitalSignChart.setBackgroundPaint(Color.white);
        CategoryPlot vitalSignChartPlot = vitalSignChart.getCategoryPlot();
        vitalSignChartPlot.setBackgroundPaint(Color.lightGray);  
                
        
        CategoryPlot P=vitalSignChart.getCategoryPlot();
        P.setRangeGridlinePaint(Color.BLUE);
        
        ChartFrame frame=new ChartFrame("Vitalsign Bar Chart", vitalSignChart);
        frame.setVisible(true);
        frame.setSize(500, 500);

    }}}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        viewgraphButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Respiratory Rate", "Heart Rate", "Blood Pressure", "Weight", "Condition", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 89, 770, 160));

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 100, 33));

        viewgraphButton.setBackground(new java.awt.Color(0, 0, 0));
        viewgraphButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewgraphButton.setForeground(new java.awt.Color(255, 255, 255));
        viewgraphButton.setText("View Bar Graph");
        viewgraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewgraphButtonActionPerformed(evt);
            }
        });
        add(viewgraphButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, 250, 33));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 90, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/docttor.jpg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(915, 17, 490, 460));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewgraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewgraphButtonActionPerformed
        
        int selectedRow = Table.getSelectedRow();
        int dialogButton = JOptionPane.YES_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Would You Like To See The Bar Graph?");
        if(dialogResult==JOptionPane.YES_OPTION){
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        createChart();
        }
    }//GEN-LAST:event_viewgraphButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewgraphButton;
    // End of variables declaration//GEN-END:variables
}
