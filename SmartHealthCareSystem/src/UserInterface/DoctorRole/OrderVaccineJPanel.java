/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.MainUserAccount.MainUserAccount;
import Business.Organization.Organization;
import Business.Organization.VaccineManagerOrganization;
import Business.WorkQueue.OrderVaccineWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Achal Sancheti
 */
public class OrderVaccineJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    Enterprise enterprise;
    MainUserAccount userAccount;

    /**
     * Creates new form OrderVaccineJPanel
     */
    public OrderVaccineJPanel(JPanel userProcessContainer,Enterprise enterprise,MainUserAccount userAccount) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) vaccineTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request: userAccount.getWorkQueue().getWorkRequestList()){
            if(request instanceof OrderVaccineWorkRequest){
            
            Object[] row = new Object[6];
            
            String vaccine = ((OrderVaccineWorkRequest)request).getVaccineName();
            row[0] = request;
            int quantity = ((OrderVaccineWorkRequest)request).getQuantity();
            row[1] = quantity;
            row[2] = request.getReceiver();
            row[3] = request.getStatus();
            row[4] = request.getDate();
            row[5] = request.getTime();
            
            model.addRow(row);
        }}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        vaccinenameTextField = new javax.swing.JTextField();
        quantitySpinner = new javax.swing.JSpinner();
        orderButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        receivedButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vaccineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity", "Receiver", "Status", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vaccineTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 760, 134));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Vaccine Name:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Quantity:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, -1, -1));
        add(vaccinenameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 210, 120, -1));
        add(quantitySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, 70, 30));

        orderButton.setBackground(new java.awt.Color(0, 0, 0));
        orderButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        orderButton.setForeground(new java.awt.Color(255, 255, 255));
        orderButton.setText("Order");
        orderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonActionPerformed(evt);
            }
        });
        add(orderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 240, 30));

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, -1, 33));

        receivedButton.setBackground(new java.awt.Color(0, 0, 0));
        receivedButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        receivedButton.setForeground(new java.awt.Color(255, 255, 255));
        receivedButton.setText("Received");
        receivedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivedButtonActionPerformed(evt);
            }
        });
        add(receivedButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, 240, 33));
    }// </editor-fold>//GEN-END:initComponents

    private void orderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonActionPerformed
        
            if(!vaccinenameTextField.getText().isEmpty()){
            String vaccine=vaccinenameTextField.getText();
            int purchaseQuantity = (Integer)quantitySpinner.getValue();
            if(purchaseQuantity<=0){
            JOptionPane.showMessageDialog(this,"Please Provide Quantity","Warning",JOptionPane.ERROR_MESSAGE);
            return;
            }
            String date = new java.text.SimpleDateFormat("MM/dd/yyyy").format(new Date());
            String time = new java.text.SimpleDateFormat("h:mm:ss a").format(new Date());
        
        OrderVaccineWorkRequest vaccineo = new OrderVaccineWorkRequest();
        vaccineo.setVaccineName(vaccine);
        vaccineo.setQuantity(purchaseQuantity);
        vaccineo.setStatus("Request Sent");
        vaccineo.setSender(userAccount);
        vaccineo.setDate(date);
        vaccineo.setTime(time);
        
        
        
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof VaccineManagerOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(vaccineo);
            userAccount.getWorkQueue().getWorkRequestList().add(vaccineo);
        }
        
        JOptionPane.showMessageDialog(null, "Request Has Been Sent To Vaccine Manager","Success",JOptionPane.INFORMATION_MESSAGE);
        vaccinenameTextField.setText("");
        populateTable();
            }
            else{
            JOptionPane.showMessageDialog(null, "Please Enter All The Fields","Error",JOptionPane.ERROR_MESSAGE);
            vaccinenameTextField.setText("");
            }
    }//GEN-LAST:event_orderButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void receivedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivedButtonActionPerformed
        int selectedRow = vaccineTable.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) vaccineTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Received")) {
                JOptionPane.showMessageDialog(null, "Request already processed.","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                request.setStatus("Received");
                populateTable();

            }

        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_receivedButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton orderButton;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JButton receivedButton;
    private javax.swing.JTable vaccineTable;
    private javax.swing.JTextField vaccinenameTextField;
    // End of variables declaration//GEN-END:variables
}
