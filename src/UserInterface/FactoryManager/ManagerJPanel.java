/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FactoryManager;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.MainUserAccount.MainUserAccount;
import Business.Organization.ManagerOrganization;
import Business.Organization.Organization;
import Business.WorkQueue.SendDroneWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Achal Sancheti
 */
public class ManagerJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    Enterprise enterprise;
    MainUserAccount userAccount;
    Organization organization;
    ManagerOrganization managerOrganization;
    EcoSystem business;

    /**
     * Creates new form ManagerJPanel
     */
    public ManagerJPanel(JPanel userProcessContainer,Enterprise enterprise,MainUserAccount userAccount,Organization organization,EcoSystem business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.userAccount=userAccount;
        this.managerOrganization=(ManagerOrganization)organization;
        this.business=business;
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request: managerOrganization.getWorkQueue().getWorkRequestList()){
            if(request instanceof SendDroneWorkRequest){
            
            Object[] row = new Object[7];
            
            String vaccine = ((SendDroneWorkRequest)request).getVaccineName();
            row[0] = request;
            int quantity = ((SendDroneWorkRequest)request).getQuantity();
            row[1] = quantity;
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            row[5] = request.getDate();
            row[6] = request.getTime();
            
            model.addRow(row);
        }}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        receiverButton = new javax.swing.JButton();
        managedroneButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity", "Sender", "Receiver", "Status", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 699, 158));

        receiverButton.setBackground(new java.awt.Color(0, 0, 0));
        receiverButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        receiverButton.setForeground(new java.awt.Color(255, 255, 255));
        receiverButton.setText("Receiver");
        receiverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiverButtonActionPerformed(evt);
            }
        });
        add(receiverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 170, 33));

        managedroneButton.setBackground(new java.awt.Color(0, 0, 0));
        managedroneButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        managedroneButton.setForeground(new java.awt.Color(255, 255, 255));
        managedroneButton.setText("Manage Drone");
        managedroneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedroneButtonActionPerformed(evt);
            }
        });
        add(managedroneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 190, 33));
    }// </editor-fold>//GEN-END:initComponents

    private void receiverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiverButtonActionPerformed
        int selectedRow = orderTable.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) orderTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Processing")) {
                JOptionPane.showMessageDialog(null, "Request already processed.","Warning",JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                request.setReceiver(userAccount);
                request.setStatus("Processing");
                populateTable();
        }
        }else {
            JOptionPane.showMessageDialog(null, "Choose a request to process.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_receiverButtonActionPerformed

    private void managedroneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managedroneButtonActionPerformed
         ManageDroneJPanel manageDroneJPanel = new ManageDroneJPanel(userProcessContainer,userAccount,managerOrganization,enterprise,business);
         userProcessContainer.add("ManageDroneJPanel",manageDroneJPanel);
         CardLayout layout = (CardLayout)userProcessContainer.getLayout();
         layout.next(userProcessContainer);
    }//GEN-LAST:event_managedroneButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton managedroneButton;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton receiverButton;
    // End of variables declaration//GEN-END:variables
}
