/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.MainUserAccount.MainUserAccount;
import Business.Organization.DoctorOrganization;
import Business.WorkQueue.AppointmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Achal Sancheti
 */
public class SeeAppointmentJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    MainUserAccount userAccount;
    Enterprise enterprise;
    DoctorOrganization doctorOrganization;

    /**
     * Creates new form SeeAppointmentJPanel
     */
    public SeeAppointmentJPanel(JPanel userProcessContainer,MainUserAccount userAccount,Enterprise enterprise,DoctorOrganization doctorOrganization) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        this.doctorOrganization=doctorOrganization;
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) dateTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request: doctorOrganization.getWorkQueue().getWorkRequestList()){
            if(request instanceof AppointmentWorkRequest){
            
            Object[] row = new Object[3];

            String date = ((AppointmentWorkRequest)request).getDate1();
            row[0] = request;
            String time = ((AppointmentWorkRequest)request).getTime1();
            row[1] = time;
            row[2] = request.getStatus();
            
            model.addRow(row);
        }}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dateTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        acceptButton = new javax.swing.JButton();
        rejectButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dateTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 710, 140));

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, 33));

        acceptButton.setBackground(new java.awt.Color(0, 0, 0));
        acceptButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        acceptButton.setForeground(new java.awt.Color(255, 255, 255));
        acceptButton.setText("Accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        add(acceptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 150, 33));

        rejectButton.setBackground(new java.awt.Color(0, 0, 0));
        rejectButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rejectButton.setForeground(new java.awt.Color(255, 255, 255));
        rejectButton.setText("Reject");
        rejectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectButtonActionPerformed(evt);
            }
        });
        add(rejectButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 170, 33));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        int selectedRow = dateTable.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) dateTable.getValueAt(selectedRow, 0);
            
                request.setStatus("Accept");
                populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectButtonActionPerformed
        int selectedRow = dateTable.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) dateTable.getValueAt(selectedRow, 0);
            
                request.setStatus("Reject");
                populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_rejectButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTable dateTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rejectButton;
    // End of variables declaration//GEN-END:variables
}
