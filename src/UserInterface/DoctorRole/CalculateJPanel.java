/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HomeEnterprise;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.MainUserAccount.MainUserAccount;
import Business.Network.Network;
import Business.WorkQueue.VitalSignWorkRequest;
import Business.WorkQueue.WorkRequest;
import com.sun.glass.events.KeyEvent;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Achal Sancheti
 */
public class CalculateJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    WorkRequest request;
    Enterprise enterprise;
    MainUserAccount userAccount;
    EcoSystem business;
    /**
     * Creates new form CalculateJPanel
     */
    public CalculateJPanel(JPanel userProcessContainer,MainUserAccount userAccount,Enterprise enterprise,WorkRequest request,EcoSystem business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.userAccount=userAccount;
        this.request=request;
        this.business=business;

        name.setText(request.getName());
        age.setText(String.valueOf(request.getAge()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        respiratoryrateTextField = new javax.swing.JTextField();
        heartrateTextField = new javax.swing.JTextField();
        bloodpressureTextField = new javax.swing.JTextField();
        weightTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        age = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        calculateButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Respiratory Rate :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 137, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Heart Rate :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 179, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Blood Pressure :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 222, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Weight :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 268, -1, -1));

        respiratoryrateTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                respiratoryrateTextFieldKeyTyped(evt);
            }
        });
        add(respiratoryrateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 135, 110, -1));

        heartrateTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                heartrateTextFieldKeyTyped(evt);
            }
        });
        add(heartrateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 177, 110, -1));

        bloodpressureTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bloodpressureTextFieldKeyTyped(evt);
            }
        });
        add(bloodpressureTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, 110, -1));

        weightTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                weightTextFieldKeyTyped(evt);
            }
        });
        add(weightTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 266, 110, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Patient Name :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, -1));

        name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        name.setForeground(new java.awt.Color(0, 0, 153));
        name.setText("jLabel1");
        add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, -1));

        age.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        age.setText("jLabel1");
        add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("(Age-");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText(")");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, 10, -1));

        calculateButton.setBackground(new java.awt.Color(0, 0, 0));
        calculateButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        calculateButton.setForeground(new java.awt.Color(255, 255, 255));
        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });
        add(calculateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 334, 101, 32));

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, -1, 33));
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/docttor.jpg"))); // NOI18N
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 540, 490));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CalculateVitalSignJPanel cvsjp = (CalculateVitalSignJPanel) component;
        cvsjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed

        try{
            if(!respiratoryrateTextField.getText().isEmpty()&&!heartrateTextField.getText().isEmpty()&&!bloodpressureTextField.getText().isEmpty()&&!weightTextField.getText().isEmpty()){
        int respiratory=Integer.parseInt(respiratoryrateTextField.getText());
        int heart=Integer.parseInt(heartrateTextField.getText());
        int blood=Integer.parseInt(bloodpressureTextField.getText());
        float weight=Integer.parseInt(weightTextField.getText());
        String date = new java.text.SimpleDateFormat("MM/dd/yyyy").format(new Date());
        String time = new java.text.SimpleDateFormat("h:mm:ss a").format(new Date());
        
        VitalSignWorkRequest vitalSign = new VitalSignWorkRequest();
        vitalSign.setRespiratoryRate(respiratory);
        vitalSign.setHeartRate(heart);
        vitalSign.setBloodPressure(blood);
        vitalSign.setWeight(weight);
        vitalSign.setDate(date);
        vitalSign.setTime(time);
        
        if(request.getAge()>0){
             if((vitalSign.getRespiratoryRate()<5 || vitalSign.getRespiratoryRate()>100) || (vitalSign.getHeartRate()<20 || vitalSign.getHeartRate()>180) || (vitalSign.getBloodPressure()<50 || vitalSign.getBloodPressure()>190) || (vitalSign.getWeight()<20 || vitalSign.getWeight()>195)){
                 vitalSign.setCondition("Danger");
             }else{
        if(request.getAge()>0 && request.getAge()<=10){
             if((vitalSign.getRespiratoryRate()>=20 && vitalSign.getRespiratoryRate()<=30) && (vitalSign.getHeartRate()>=80 && vitalSign.getHeartRate()<=110) && (vitalSign.getBloodPressure()>=80 && vitalSign.getBloodPressure()<=110) && (vitalSign.getWeight()>=22 && vitalSign.getWeight()<=31)){
             vitalSign.setCondition("Normal");
             }             
             else{
             vitalSign.setCondition("Abnormal");
             }
         }
         else{
         if(request.getAge()>10 && request.getAge()<=20){
         if((vitalSign.getRespiratoryRate()>=20 && vitalSign.getRespiratoryRate()<=30) && (vitalSign.getHeartRate()>=70 && vitalSign.getHeartRate()<=120) && (vitalSign.getBloodPressure()>=80 && vitalSign.getBloodPressure()<=110) && (vitalSign.getWeight()>=31 && vitalSign.getWeight()<=40)){
         vitalSign.setCondition("Normal");
             }             
             else{
             vitalSign.setCondition("Abnormal");
             }
         }
         else{
         if(request.getAge()>20 && request.getAge()<=30){//
         if((vitalSign.getRespiratoryRate()>=15 && vitalSign.getRespiratoryRate()<=25) && (vitalSign.getHeartRate()>=60 && vitalSign.getHeartRate()<=110) && (vitalSign.getBloodPressure()>=80 && vitalSign.getBloodPressure()<=120) && (vitalSign.getWeight()>=41 && vitalSign.getWeight()<=92)){
         vitalSign.setCondition("Normal");
         }
         else{
         vitalSign.setCondition("Abnormal");
            }
         }
         else{
         if(request.getAge()>30){
         if((vitalSign.getRespiratoryRate()>=12 && vitalSign.getRespiratoryRate()<=20) && (vitalSign.getHeartRate()>=55 && vitalSign.getHeartRate()<=105) && (vitalSign.getBloodPressure()>=110 && vitalSign.getBloodPressure()<=120) && (vitalSign.getWeight()>=110 && vitalSign.getWeight()<=180)){
              vitalSign.setCondition("Normal");
         }
         else{
         vitalSign.setCondition("Abnormal");
         }
         
         }
         }
         }}
         }
         }
    
        Enterprise ent = null;
        Organization org = null;
        for(Network network : business.getNetworkList()){
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                if(enterprise instanceof HomeEnterprise)
                        ent=enterprise;
            
        
        
        
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof PatientOrganization){
                org = organization;
                break;
            }
        }
            }
        }
        
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(vitalSign);
            userAccount.getWorkQueue().getWorkRequestList().add(vitalSign);
        }
        
        JOptionPane.showMessageDialog(null, "Vital Sign Has Been Calculated","Success",JOptionPane.INFORMATION_MESSAGE);
        respiratoryrateTextField.setText("");
        heartrateTextField.setText("");
        bloodpressureTextField.setText("");
        weightTextField.setText("");
        respiratoryrateTextField.setVisible(false);
        heartrateTextField.setVisible(false);
        bloodpressureTextField.setVisible(false);
        weightTextField.setVisible(false);
        calculateButton.setVisible(false);
            }
            else{
            JOptionPane.showMessageDialog(null, "Please Enter All The Fields","Error",JOptionPane.ERROR_MESSAGE);
            respiratoryrateTextField.setText("");
        heartrateTextField.setText("");
        bloodpressureTextField.setText("");
        weightTextField.setText("");
            }   
        }catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null, "Enter Correct Values","Error",JOptionPane.ERROR_MESSAGE);
        respiratoryrateTextField.setText("");
        heartrateTextField.setText("");
        bloodpressureTextField.setText("");
        weightTextField.setText("");
        }
        
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void respiratoryrateTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_respiratoryrateTextFieldKeyTyped
        
        int c = evt.getKeyChar();
        if(!(c=='0'||c=='1'||c=='2'||c=='3'||c=='4'||c=='5'||c=='6'||c=='7'||c=='8'||c=='9'||c==KeyEvent.VK_BACKSPACE||c==KeyEvent.VK_DELETE))
        {
        evt.consume();
        JOptionPane.showMessageDialog(null, "Please Enter Integers For Respiratory Rate","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_respiratoryrateTextFieldKeyTyped

    private void heartrateTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_heartrateTextFieldKeyTyped
        
        int c = evt.getKeyChar();
        if(!(c=='0'||c=='1'||c=='2'||c=='3'||c=='4'||c=='5'||c=='6'||c=='7'||c=='8'||c=='9'||c==KeyEvent.VK_BACKSPACE||c==KeyEvent.VK_DELETE))
        {
        evt.consume();
        JOptionPane.showMessageDialog(null, "Please Enter Integers For Heart Rate","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_heartrateTextFieldKeyTyped

    private void bloodpressureTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bloodpressureTextFieldKeyTyped
        
        int c = evt.getKeyChar();
        if(!(c=='0'||c=='1'||c=='2'||c=='3'||c=='4'||c=='5'||c=='6'||c=='7'||c=='8'||c=='9'||c==KeyEvent.VK_BACKSPACE||c==KeyEvent.VK_DELETE))
        {
        evt.consume();
        JOptionPane.showMessageDialog(null, "Please Enter Integers For Blood Pressure","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bloodpressureTextFieldKeyTyped

    private void weightTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weightTextFieldKeyTyped

    }//GEN-LAST:event_weightTextFieldKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel age;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField bloodpressureTextField;
    private javax.swing.JButton calculateButton;
    private javax.swing.JTextField heartrateTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel name;
    private javax.swing.JTextField respiratoryrateTextField;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration//GEN-END:variables
}
