/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientRole;

import Business.Enterprise.Enterprise;
import Business.MainUserAccount.MainUserAccount;
import Business.Organization.Organization;
import Business.Organization.PatientRelativeOrganization;
import Business.WorkQueue.EmergencyMessageWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Achal Sancheti
 */
public class MessageJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    MainUserAccount account;
    Enterprise enterprise;

    /**
     * Creates new form MessageJPanel
     */
    public MessageJPanel(JPanel userProcessContainer,MainUserAccount account,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.enterprise=enterprise;
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) messageTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request: account.getWorkQueue().getWorkRequestList()){
            if(request instanceof EmergencyMessageWorkRequest){
            
            Object[] row = new Object[4];

            row[0] = request.getDate();
            row[1] = request.getTime();
            String door = ((EmergencyMessageWorkRequest)request).getMessage();
            row[2] = door;
            row[3] = request.getStatus();
            
            model.addRow(row);
            }
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sendButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        messageTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sendButton.setBackground(new java.awt.Color(0, 0, 0));
        sendButton.setForeground(new java.awt.Color(255, 255, 255));
        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });
        add(sendButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, 120, 33));

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, 33));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Message:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, -1, -1));

        messageTextField.setEnabled(false);
        add(messageTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 310, 170, -1));

        messageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(messageTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 680, 130));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/message.jpg"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 70, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        
        int dialogButton = JOptionPane.YES_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Are You Sure You Want To Send Message To Your Relative?");
        if(dialogResult==JOptionPane.YES_OPTION){
            String date = new java.text.SimpleDateFormat("MM/dd/yyyy").format(new Date());
            String time = new java.text.SimpleDateFormat("h:mm:ss a").format(new Date());
            
            EmergencyMessageWorkRequest emergencyMessageWorkRequest = new EmergencyMessageWorkRequest();
            emergencyMessageWorkRequest.setMessage("Urgent Help Required");
            emergencyMessageWorkRequest.setStatus("Pending");
            emergencyMessageWorkRequest.setDate(date);
            emergencyMessageWorkRequest.setTime(time);
        
            Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof PatientRelativeOrganization){
                org = organization;
                break;
            }
        }
        
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(emergencyMessageWorkRequest);
            account.getWorkQueue().getWorkRequestList().add(emergencyMessageWorkRequest);
        }
        
        JOptionPane.showMessageDialog(null, "Message Has Been Sent To The Relative","Success",JOptionPane.INFORMATION_MESSAGE);
        populateTable();
        
        }
    }//GEN-LAST:event_sendButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable messageTable;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
